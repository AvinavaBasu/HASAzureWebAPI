// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Raet_UserManagement_HAS.FeatureFiles
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("HAS Feature-2:Test GrantedAPI", Description="\tCreate Granted evetn request in EAEvents table & verify API response", SourceFile="FeatureFiles\\HAS_Feature_2_GrantedAPI.feature", SourceLine=0)]
    public partial class HASFeature_2TestGrantedAPIFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "HAS_Feature_2_GrantedAPI.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HAS Feature-2:Test GrantedAPI", "\tCreate Granted evetn request in EAEvents table & verify API response", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void TestGrantedAPI_DEV(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DEV_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestGrantedAPI-DEV", null, @__tags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("I Have GrantedApiUrl https://raetgdpr-dev.azurewebsites.net/api/EffectiveAuthoriz" +
                        "ationEvents/granted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.And("I have Request type as Post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
 testRunner.And("I have Content-Type Header value as application/json", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("I have Authorization Header value from AuthenticationAPI-Response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And(string.Format("I have APIBody value as {0}", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.When("I Post Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 13
 testRunner.Then("I will get Created response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
 testRunner.And("I get GUID, Permission and Application details from response body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"TestGrantedAPI-DEV, {  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Create Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", new string[] {
                "DEV_API"}, SourceLine=17)]
        public virtual void TestGrantedAPI_DEV_FromDateTime2019_02_15T0000000000EffectiveAuthorizationTenantId188A2E34_410B_41Af_A501_8E99482A8E8EUserContextYouforce_UsersIdRO276870PermissionIdCreateEmployee12ApplicationFeb_27NewFrameworkDescriptionTestEnrichmentTargetContextYouforce_UsersIdIC112070()
        {
#line 5
this.TestGrantedAPI_DEV(@"{  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Create Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"TestGrantedAPI-DEV, {  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Update Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", new string[] {
                "DEV_API"}, SourceLine=17)]
        public virtual void TestGrantedAPI_DEV_FromDateTime2019_02_15T0000000000EffectiveAuthorizationTenantId188A2E34_410B_41Af_A501_8E99482A8E8EUserContextYouforce_UsersIdRO276870PermissionIdUpdateEmployee12ApplicationFeb_27NewFrameworkDescriptionTestEnrichmentTargetContextYouforce_UsersIdIC112070()
        {
#line 5
this.TestGrantedAPI_DEV(@"{  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Update Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"TestGrantedAPI-DEV, {  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Delete Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", new string[] {
                "DEV_API"}, SourceLine=17)]
        public virtual void TestGrantedAPI_DEV_FromDateTime2019_02_15T0000000000EffectiveAuthorizationTenantId188A2E34_410B_41Af_A501_8E99482A8E8EUserContextYouforce_UsersIdRO276870PermissionIdDeleteEmployee12ApplicationFeb_27NewFrameworkDescriptionTestEnrichmentTargetContextYouforce_UsersIdIC112070()
        {
#line 5
this.TestGrantedAPI_DEV(@"{  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Delete Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestGrantedAPI_FAT(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "FAT_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestGrantedAPI-FAT", null, @__tags);
#line 23
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 24
 testRunner.Given("I Have GrantedApiUrl https://raetgdpr-fat.azurewebsites.net/api/EffectiveAuthoriz" +
                        "ationEvents/granted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 25
 testRunner.And("I have Request type as Post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("I have Content-Type Header value as application/json", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("I have Authorization Header value from AuthenticationAPI-Response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And(string.Format("I have APIBody value as {0}", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.When("I Post Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
 testRunner.Then("I will get Created response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
 testRunner.And("I get GUID, Permission and Application details from response body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"TestGrantedAPI-FAT, {  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Create Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", new string[] {
                "FAT_API"}, SourceLine=35)]
        public virtual void TestGrantedAPI_FAT_FromDateTime2019_02_15T0000000000EffectiveAuthorizationTenantId188A2E34_410B_41Af_A501_8E99482A8E8EUserContextYouforce_UsersIdRO276870PermissionIdCreateEmployee12ApplicationFeb_27NewFrameworkDescriptionTestEnrichmentTargetContextYouforce_UsersIdIC112070()
        {
#line 23
this.TestGrantedAPI_FAT(@"{  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Create Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"TestGrantedAPI-FAT, {  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Update Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", new string[] {
                "FAT_API"}, SourceLine=35)]
        public virtual void TestGrantedAPI_FAT_FromDateTime2019_02_15T0000000000EffectiveAuthorizationTenantId188A2E34_410B_41Af_A501_8E99482A8E8EUserContextYouforce_UsersIdRO276870PermissionIdUpdateEmployee12ApplicationFeb_27NewFrameworkDescriptionTestEnrichmentTargetContextYouforce_UsersIdIC112070()
        {
#line 23
this.TestGrantedAPI_FAT(@"{  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Update Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"TestGrantedAPI-FAT, {  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Delete Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", new string[] {
                "FAT_API"}, SourceLine=35)]
        public virtual void TestGrantedAPI_FAT_FromDateTime2019_02_15T0000000000EffectiveAuthorizationTenantId188A2E34_410B_41Af_A501_8E99482A8E8EUserContextYouforce_UsersIdRO276870PermissionIdDeleteEmployee12ApplicationFeb_27NewFrameworkDescriptionTestEnrichmentTargetContextYouforce_UsersIdIC112070()
        {
#line 23
this.TestGrantedAPI_FAT(@"{  ""fromDateTime"": ""2019-02-15T00:00:00+00:00"",  ""effectiveAuthorization"": {    ""tenantId"": ""188a2e34-410b-41af-a501-8e99482a8e8e"",    ""user"": {      ""context"": ""Youforce.Users"",      ""id"": ""RO276870""    },    ""permission"": {      ""id"": ""Delete Employee12"",      ""application"": ""Feb-27NewFramework"",      ""description"": ""Test Enrichment""    },    ""target"": {      ""context"": ""Youforce.Users"",      ""id"": ""IC112070""    }  }}", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
